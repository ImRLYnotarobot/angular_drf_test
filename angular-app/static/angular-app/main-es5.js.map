{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<h2>Log In</h2>\\n\\n<div class=\\\"row\\\" *ngIf=\\\"!_userService.token\\\">\\n  <div class=\\\"col-sm-4\\\">\\n    <label>Username:</label><br />\\n    <input type=\\\"text\\\" name=\\\"login-username\\\" [(ngModel)]=\\\"user.username\\\">\\n    <span *ngFor=\\\"let error of _userService.errors.username\\\"><br />\\n    {{ error }}</span></div>\\n  <div class=\\\"col-sm-4\\\">\\n    <label>Password:</label><br />\\n    <input type=\\\"password\\\" name=\\\"login-password\\\" [(ngModel)]=\\\"user.password\\\">\\n    <span *ngFor=\\\"let error of _userService.errors.password\\\"><br />\\n    {{ error }}</span>\\n  </div>\\n  <div class=\\\"col-sm-4\\\">\\n    <button (click)=\\\"login()\\\" class=\\\"btn btn-primary\\\">Log In</button>\\n  </div>\\n  <div class=\\\"col-sm-12\\\">\\n    <span *ngFor=\\\"let error of _userService.errors.non_field_errors\\\">{{ error }}<br /></span>\\n  </div>\\n</div>\\n<div class=\\\"row\\\" *ngIf=\\\"_userService.token\\\">\\n  <div class=\\\"col-sm-12\\\">You are logged in as {{ _userService.username }}.<br />\\n    Token Expires: {{ _userService.token_expires }}<br />\\n    <button (click)=\\\"refreshToken()\\\" class=\\\"btn btn-primary\\\">Refresh Token</button>\\n    <button (click)=\\\"logout()\\\" class=\\\"btn btn-primary\\\">Log Out</button>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {UserService} from './user.service';\nimport {throwError} from 'rxjs';\n \n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n \n  /**\n   * An object representing the user for the login form\n   */\n  public user: any;\n \n  constructor(private _userService: UserService) { }\n \n  ngOnInit() {\n    this.user = {\n      username: '',\n      password: ''\n    };\n  }\n \n  login() {\n    this._userService.login({'username': this.user.username, 'password': this.user.password});\n  }\n \n  refreshToken() {\n    this._userService.refreshToken();\n  }\n \n  logout() {\n    this._userService.logout();\n  }\n \n}\n\n","// import { BrowserModule } from '@angular/platform-browser';\n// import { NgModule } from '@angular/core';\n\n// import { AppComponent } from './app.component';\n\n// @NgModule({\n//   declarations: [\n//     AppComponent\n//   ],\n//   imports: [\n//     BrowserModule\n//   ],\n//   providers: [],\n//   bootstrap: [AppComponent]\n// })\n// export class AppModule { }\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';    // add this\nimport { FormsModule } from '@angular/forms';    // add this\nimport { AppComponent } from './app.component';\nimport { UserService } from './user.service';    // add this\n \n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    UserService\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n \n@Injectable()\nexport class UserService {\n \n  private httpOptions: any;\n \n  // текущий JWT токен\n  public token: string;\n \n  // время окончания жизни токена\n  public token_expires: Date;\n \n  // логин пользователя\n  public username: string;\n \n  // сообщения об ошибках авторизации\n  public errors: any = [];\n \n  constructor(private http: HttpClient) {\n    this.httpOptions = {\n      headers: new HttpHeaders({'Content-Type': 'application/json'})\n    };\n  }\n \n  // используем http.post() для получения токена\n  public login(user) {\n    this.http.post('/api-token-auth/', JSON.stringify(user), this.httpOptions).subscribe(\n      data => {\n        this.updateData(data['token']);\n      },\n      err => {\n        this.errors = err['error'];\n      }\n    );\n  }\n \n  // обновление JWT токена\n  public refreshToken() {\n    this.http.post('/api-token-refresh/', JSON.stringify({token: this.token}), this.httpOptions).subscribe(\n      data => {\n        this.updateData(data['token']);\n      },\n      err => {\n        this.errors = err['error'];\n      }\n    );\n  }\n \n  public logout() {\n    this.token = null;\n    this.token_expires = null;\n    this.username = null;\n  }\n \n  private updateData(token) {\n    this.token = token;\n    this.errors = [];\n \n    // декодирование токена для получения логина и времени жизни токена\n    const token_parts = this.token.split(/\\./);\n    const token_decoded = JSON.parse(window.atob(token_parts[1]));\n    this.token_expires = new Date(token_decoded.exp * 1000);\n    this.username = token_decoded.username;\n  }\n \n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}